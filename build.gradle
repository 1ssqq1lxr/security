buildscript {
	    repositories {	      
	        mavenCentral()	
	    }
	
	    dependencies {
	        //classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
	        classpath 'org.akhikhl.gretty:gretty:+'
	        
	    }
}
 
configure(allprojects) { project ->
	group = PROJ_GROUP
	version = PROJ_VERSION
	ext.bboss_version = BBOSS_PROJ_VERSION
	apply plugin: "java"
	apply plugin: "maven-publish"
	apply plugin: "eclipse"
	apply plugin: "idea"
	if(project.getProperty('skipTest'))
	{
		compileTestJava.enabled=false
		processTestResources.enabled=false
		testClasses.enabled = false
		//test.onlyIf { !project.getProperty('skipTest') } 
		test.enabled = false  
	}
	eclipse {
		jdt {
			//if you want to alter the java versions (by default they are configured with gradle java plugin settings):
			sourceCompatibility = SOURCE_COMPILER_LEVEL
			targetCompatibility = TARGET_COMPILER_LEVEL
			javaRuntimeName = "../../org.eclipse.jdt.launching.JRE_CONTAINER"

		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	tasks.withType(Javadoc) {
		options.encoding = 'UTF-8'
	}

	jar {
		manifest {
			attributes (
					'Implementation': version,
					'Specification-Version': '',
					'Implementation-Vendor': '',
					'Implementation-ProductID': project.name,
					'Compile-Timestamp': new Date().format('yyyy-MM-dd HH:mm:ss'),
					'Compile-User': DEVELOPER_NAME
			)
		}
	}

	dependencies {
		testCompile 'junit:junit:4+'
	}

	repositories {
		mavenCentral()
		mavenLocal()
	}
}

configure([project(":bboss-security")]) { subproject ->
	task sourcesJar(type: Jar) {
		classifier = "sources"
		from sourceSets.main.allJava
	}

	task javaDocJar(type: Jar, dependsOn: javadoc) {
		classifier = "javadoc"
		from javadoc.destinationDir
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourcesJar
				artifact javaDocJar
			}
		}
		repositories {
			mavenLocal()
	        maven {
	            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
	            credentials {
	                username "bboss"
	                password "bboss123456"
	            }
	        }
	    }
	}
}

configure([project(":session"),project(":sessionmonitor")]) { subproject ->
	apply plugin: 'war'    
    /**apply plugin: 'org.akhikhl.gretty'
    
     gretty {
	    httpPort = 80
	   
	    contextPath = '/bboss-websocket'
	    jvmArgs = ['-Xmx1024M', '-XX:PermSize=128M', '-XX:MaxPermSize=256M']
	  //  servletContainer = 'jetty7'
	  
	  } */
	war {
	    from 'WebRoot'
	    // adds a file-set to the root of the archive
	    webInf { from 'WebRoot/WEB-INF' } // adds a file-set to the WEB-INF dir.
	    classpath configurations.compile // adds a configuration to the WEB-INF/lib dir.
	    webXml = file('WebRoot/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
	}
	webAppDirName = 'WebRoot'  
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact war
			}
		}
		repositories {
			mavenLocal()
		}
	}
}