//jar.enabled=false
jar { classifier = "all" }

sourceSets {
	 bboss_security_web_inf {
        java {
            srcDirs 'src-inf'
        }        
        compileClasspath = configurations.compile +configurations.compileOnly 
    }
    main {
        java {
            srcDirs 'src'
        }
        compileClasspath = configurations.compile + sourceSets.bboss_security_web_inf.output+configurations.compileOnly 
    }
   
   
   
}


project.tasks.compileJava.dependsOn(project(':bboss-security').tasks.publish)

dependencies {
    compile(
    		[group: 'org.ow2.asm', name: 'asm', version: '5.0.3', transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-core', version: "${bboss_version}", transitive: false],
             [group: 'com.bbossgroups', name: 'bboss-mvc', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-security', version: "${version}", transitive: false],
             [group: 'com.bbossgroups', name: 'bboss-util', version: "${bboss_version}", transitive: false],
              [group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false],
               [group: 'com.bbossgroups', name: 'bboss-velocity', version: "${bboss_version}", transitive: false],
             [group: 'cglib', name: 'cglib-nodep', version: '3.1', transitive: false],
              [group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.2', transitive: false],
               [group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.10',transitive: true],
            [group: 'com.bbossgroups', name: 'bboss-soa', version: "${bboss_version}", transitive: false]
    )

    compileOnly (            
            [group: 'javaee', name: 'javaee-api', version: '5', transitive: false],
            
    )
   
   // aaaCompile sourceSets.bboss_security_web_inf.output
}
 
task sourcesJar(type: Jar) {
	classifier = "sources"
	from sourceSets.main.allJava
}

task javaDocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

sourceSets.bboss_security_web_inf { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = "bboss-security-web-inf"
        from set.output
    }

    def jarSourcesTask = task("${set.name}SourceJar", type: Jar) {
        baseName = "bboss-security-web-inf"
        classifier = "sources"
        from set.allJava
    }

    def docTask = task("${set.name}Doc", type: Javadoc) {
        classpath = set.compileClasspath
        source set.allJava
    }

    def jarDocTask = task("${set.name}DocJar", type: Jar, dependsOn: docTask) {
        baseName = "bboss-security-web-inf"
        classifier = "javadoc"

        from docTask
    }

    artifacts {
        archives jarTask
        archives jarSourcesTask
        archives jarDocTask
    }
}



publishing {
    publications {
        bboss_security_web_inf(MavenPublication) {
            artifactId 'bboss-security-web-inf'
            from components.java
            artifact bboss_security_web_infJar
            artifact bboss_security_web_infSourceJar
            artifact bboss_security_web_infDocJar
        }
        bboss_security_web(MavenPublication) {
             artifactId 'bboss-security-web'
            from components.java
            artifact sourcesJar
            artifact javaDocJar
            
        }
        
    }
    repositories {
        mavenLocal()
       
        
    }
    
}